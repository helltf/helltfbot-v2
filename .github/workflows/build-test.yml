name: CI

on:
  push:
    branches: [master, feature, dev, hotfix-**]
  pull_request:
    branches: [master, feature, dev]

jobs:
  build-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Run build and lint script
        run: |
          npm install typescript
          npm run lint
          npm run build
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Run build script
        run: |
          npm install typescript
          npm run build
      - name: Run unit tests
        env:
          NODE_ENV: test
        run: npm run unit-tests

  integration-tests:
    runs-on: ubuntu-latest

    container: node:16

    services:
      postgres:
        ports:
          - 5432:5432
        image: postgres

        env:
          POSTGRES_DB: twitch
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: ${{ secrets.MYSQL_USER }}
          POSTGRES_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm ci
          npm install typescript
          npm run build
      - name: Run integrations tests
        run: npm run integration-tests

        env:
          TEST_DB_HOST: postgres
          TEST_DB_PORT: 5432
          TEST_DB_USERNAME: ${{ secrets.MYSQL_USER }}
          TEST_DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          TEST_DB_DATABASE: twitch
